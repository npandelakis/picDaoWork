import { HardhatRuntimeEnvironment } from "hardhat/types";
declare const mine: (hre: HardhatRuntimeEnvironment) => (amount: number) => Promise<void>;
declare const increaseTime: (hre: HardhatRuntimeEnvironment) => (delta: string) => Promise<any>;
declare const setTimeIncrease: (hre: HardhatRuntimeEnvironment) => (delta: string) => Promise<void>;
declare const setTime: (hre: HardhatRuntimeEnvironment) => (time: number) => Promise<void>;
declare const setTimeNextBlock: (hre: HardhatRuntimeEnvironment) => (time: number) => Promise<void>;
declare const _default: (hre: HardhatRuntimeEnvironment) => {
    increaseTime: (delta: string) => Promise<void>;
    setTimeIncrease: (delta: string) => Promise<void>;
    mine: (amount: number) => Promise<void>;
    setTime: (time: number) => Promise<void>;
    setTimeNextBlock: (time: number) => Promise<void>;
};
export default _default;
//# sourceMappingURL=time-and-mine.d.ts.map