{
  "address": "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "newValue",
          "type": "string"
        }
      ],
      "name": "ValueChanged",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "retrieve",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "newValue",
          "type": "string"
        }
      ],
      "name": "store",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "value",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x44978db55c55a42b8020c88d4aad55959b49b7b14c7edb5481575c518989c7c6",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
    "transactionIndex": 0,
    "gasUsed": "737869",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000800000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000010000000010000000000000000000000020000000000000100000800000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000002000000000000000000020000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0xd5dc9a81490fb765ddd328518c9ab03df486746190b26fea0277433d2a81bacc",
    "transactionHash": "0x44978db55c55a42b8020c88d4aad55959b49b7b14c7edb5481575c518989c7c6",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 8,
        "transactionHash": "0x44978db55c55a42b8020c88d4aad55959b49b7b14c7edb5481575c518989c7c6",
        "address": "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xd5dc9a81490fb765ddd328518c9ab03df486746190b26fea0277433d2a81bacc"
      }
    ],
    "blockNumber": 8,
    "cumulativeGasUsed": "737869",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "1c7000f2151e591eb3a567da8d0ec4bb",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newValue\",\"type\":\"string\"}],\"name\":\"ValueChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"retrieve\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newValue\",\"type\":\"string\"}],\"name\":\"store\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"value\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Box.sol\":\"Box\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Box.sol\":{\"content\":\"// contracts/Box.sol\\n// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract Box is Ownable {\\n  string public value = \\\"http://cs231.jeffondich.com/jeff_square_head.jpg\\\";\\n\\n  // Emitted when the stored value changes\\n  event ValueChanged(string newValue);\\n\\n  // Stores a new value in the contract\\n  function store(string memory newValue) public onlyOwner {\\n    value = newValue;\\n    emit ValueChanged(newValue);\\n  }\\n\\n  // Reads the last stored value\\n  function retrieve() public view returns (string memory) {\\n    return value;\\n  }\\n}\",\"keccak256\":\"0x2e99934915307c86b59917e8ccbe987ab340fdf257f4118ea8acbefd80b7e3bd\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405260405180606001604052806030815260200162000cfa60309139600190805190602001906200003592919062000136565b503480156200004357600080fd5b5062000064620000586200006a60201b60201c565b6200007260201b60201c565b6200024b565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b828054620001449062000215565b90600052602060002090601f016020900481019282620001685760008555620001b4565b82601f106200018357805160ff1916838001178555620001b4565b82800160010185558215620001b4579182015b82811115620001b357825182559160200191906001019062000196565b5b509050620001c39190620001c7565b5090565b5b80821115620001e2576000816000905550600101620001c8565b5090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200022e57607f821691505b60208210811415620002455762000244620001e6565b5b50919050565b610a9f806200025b6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063131a0680146100675780632e64cec1146100835780633fa4f245146100a1578063715018a6146100bf5780638da5cb5b146100c9578063f2fde38b146100e7575b600080fd5b610081600480360381019061007c9190610762565b610103565b005b61008b6101d0565b6040516100989190610833565b60405180910390f35b6100a9610262565b6040516100b69190610833565b60405180910390f35b6100c76102f0565b005b6100d1610378565b6040516100de9190610896565b60405180910390f35b61010160048036038101906100fc91906108dd565b6103a1565b005b61010b610499565b73ffffffffffffffffffffffffffffffffffffffff16610129610378565b73ffffffffffffffffffffffffffffffffffffffff161461017f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017690610956565b60405180910390fd5b8060019080519060200190610195929190610565565b507fce59a1f2cca0fa1bf7d80c74a303393cb56e768ec38427649054a68be65e11d7816040516101c59190610833565b60405180910390a150565b6060600180546101df906109a5565b80601f016020809104026020016040519081016040528092919081815260200182805461020b906109a5565b80156102585780601f1061022d57610100808354040283529160200191610258565b820191906000526020600020905b81548152906001019060200180831161023b57829003601f168201915b5050505050905090565b6001805461026f906109a5565b80601f016020809104026020016040519081016040528092919081815260200182805461029b906109a5565b80156102e85780601f106102bd576101008083540402835291602001916102e8565b820191906000526020600020905b8154815290600101906020018083116102cb57829003601f168201915b505050505081565b6102f8610499565b73ffffffffffffffffffffffffffffffffffffffff16610316610378565b73ffffffffffffffffffffffffffffffffffffffff161461036c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036390610956565b60405180910390fd5b61037660006104a1565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6103a9610499565b73ffffffffffffffffffffffffffffffffffffffff166103c7610378565b73ffffffffffffffffffffffffffffffffffffffff161461041d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041490610956565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561048d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048490610a49565b60405180910390fd5b610496816104a1565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b828054610571906109a5565b90600052602060002090601f01602090048101928261059357600085556105da565b82601f106105ac57805160ff19168380011785556105da565b828001600101855582156105da579182015b828111156105d95782518255916020019190600101906105be565b5b5090506105e791906105eb565b5090565b5b808211156106045760008160009055506001016105ec565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61066f82610626565b810181811067ffffffffffffffff8211171561068e5761068d610637565b5b80604052505050565b60006106a1610608565b90506106ad8282610666565b919050565b600067ffffffffffffffff8211156106cd576106cc610637565b5b6106d682610626565b9050602081019050919050565b82818337600083830152505050565b6000610705610700846106b2565b610697565b90508281526020810184848401111561072157610720610621565b5b61072c8482856106e3565b509392505050565b600082601f8301126107495761074861061c565b5b81356107598482602086016106f2565b91505092915050565b60006020828403121561077857610777610612565b5b600082013567ffffffffffffffff81111561079657610795610617565b5b6107a284828501610734565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156107e55780820151818401526020810190506107ca565b838111156107f4576000848401525b50505050565b6000610805826107ab565b61080f81856107b6565b935061081f8185602086016107c7565b61082881610626565b840191505092915050565b6000602082019050818103600083015261084d81846107fa565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061088082610855565b9050919050565b61089081610875565b82525050565b60006020820190506108ab6000830184610887565b92915050565b6108ba81610875565b81146108c557600080fd5b50565b6000813590506108d7816108b1565b92915050565b6000602082840312156108f3576108f2610612565b5b6000610901848285016108c8565b91505092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006109406020836107b6565b915061094b8261090a565b602082019050919050565b6000602082019050818103600083015261096f81610933565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806109bd57607f821691505b602082108114156109d1576109d0610976565b5b50919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610a336026836107b6565b9150610a3e826109d7565b604082019050919050565b60006020820190508181036000830152610a6281610a26565b905091905056fea264697066735822122033325a8bfe6f99ce19a0324e0ffb5f51759631a515f70aa5fd4fb121d7ea3ecb64736f6c63430008090033687474703a2f2f63733233312e6a6566666f6e646963682e636f6d2f6a6566665f7371756172655f686561642e6a7067",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c8063131a0680146100675780632e64cec1146100835780633fa4f245146100a1578063715018a6146100bf5780638da5cb5b146100c9578063f2fde38b146100e7575b600080fd5b610081600480360381019061007c9190610762565b610103565b005b61008b6101d0565b6040516100989190610833565b60405180910390f35b6100a9610262565b6040516100b69190610833565b60405180910390f35b6100c76102f0565b005b6100d1610378565b6040516100de9190610896565b60405180910390f35b61010160048036038101906100fc91906108dd565b6103a1565b005b61010b610499565b73ffffffffffffffffffffffffffffffffffffffff16610129610378565b73ffffffffffffffffffffffffffffffffffffffff161461017f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017690610956565b60405180910390fd5b8060019080519060200190610195929190610565565b507fce59a1f2cca0fa1bf7d80c74a303393cb56e768ec38427649054a68be65e11d7816040516101c59190610833565b60405180910390a150565b6060600180546101df906109a5565b80601f016020809104026020016040519081016040528092919081815260200182805461020b906109a5565b80156102585780601f1061022d57610100808354040283529160200191610258565b820191906000526020600020905b81548152906001019060200180831161023b57829003601f168201915b5050505050905090565b6001805461026f906109a5565b80601f016020809104026020016040519081016040528092919081815260200182805461029b906109a5565b80156102e85780601f106102bd576101008083540402835291602001916102e8565b820191906000526020600020905b8154815290600101906020018083116102cb57829003601f168201915b505050505081565b6102f8610499565b73ffffffffffffffffffffffffffffffffffffffff16610316610378565b73ffffffffffffffffffffffffffffffffffffffff161461036c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036390610956565b60405180910390fd5b61037660006104a1565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6103a9610499565b73ffffffffffffffffffffffffffffffffffffffff166103c7610378565b73ffffffffffffffffffffffffffffffffffffffff161461041d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041490610956565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561048d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048490610a49565b60405180910390fd5b610496816104a1565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b828054610571906109a5565b90600052602060002090601f01602090048101928261059357600085556105da565b82601f106105ac57805160ff19168380011785556105da565b828001600101855582156105da579182015b828111156105d95782518255916020019190600101906105be565b5b5090506105e791906105eb565b5090565b5b808211156106045760008160009055506001016105ec565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61066f82610626565b810181811067ffffffffffffffff8211171561068e5761068d610637565b5b80604052505050565b60006106a1610608565b90506106ad8282610666565b919050565b600067ffffffffffffffff8211156106cd576106cc610637565b5b6106d682610626565b9050602081019050919050565b82818337600083830152505050565b6000610705610700846106b2565b610697565b90508281526020810184848401111561072157610720610621565b5b61072c8482856106e3565b509392505050565b600082601f8301126107495761074861061c565b5b81356107598482602086016106f2565b91505092915050565b60006020828403121561077857610777610612565b5b600082013567ffffffffffffffff81111561079657610795610617565b5b6107a284828501610734565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156107e55780820151818401526020810190506107ca565b838111156107f4576000848401525b50505050565b6000610805826107ab565b61080f81856107b6565b935061081f8185602086016107c7565b61082881610626565b840191505092915050565b6000602082019050818103600083015261084d81846107fa565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061088082610855565b9050919050565b61089081610875565b82525050565b60006020820190506108ab6000830184610887565b92915050565b6108ba81610875565b81146108c557600080fd5b50565b6000813590506108d7816108b1565b92915050565b6000602082840312156108f3576108f2610612565b5b6000610901848285016108c8565b91505092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006109406020836107b6565b915061094b8261090a565b602082019050919050565b6000602082019050818103600083015261096f81610933565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806109bd57607f821691505b602082108114156109d1576109d0610976565b5b50919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610a336026836107b6565b9150610a3e826109d7565b604082019050919050565b60006020820190508181036000830152610a6281610a26565b905091905056fea264697066735822122033325a8bfe6f99ce19a0324e0ffb5f51759631a515f70aa5fd4fb121d7ea3ecb64736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/Box.sol:Box",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 134,
        "contract": "contracts/Box.sol:Box",
        "label": "value",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      }
    }
  }
}